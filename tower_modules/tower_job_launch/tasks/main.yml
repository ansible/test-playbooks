- name: Launch a Job Template
  tower_job_launch:
    job_template: "Demo Job Template"
    inventory: "Demo Inventory"
    credential: "Demo Credential"
  register: result

- assert:
    that:
      - "result is changed"
      - "result.status == 'pending'"

- name: Wait for a job template to complete
  tower_job_wait:
    job_id: "{{ result.id }}"
    max_interval: 10
    timeout: 120
  register: result

- assert:
    that:
      - "result is not changed"
      - "result.status == 'successful'"

- name: Check module fails with correct msg
  tower_job_launch:
     job_template: "Non Existing Job Template"
     inventory: "Test Inventory"
     credential: "Test Credential"
  register: result
  ignore_errors: true

- assert:
    that:
      - "result.msg =='Unable to launch job, job_template/Non Existing Job Template was not found: The requested object could not be found.'"

- name: Create a Job Template for testing prompt on launch
  tower_job_template:
    name: "Demo Job Template - ask inventory and credential"
    project: Demo Project
    playbook: hello_world.yml
    job_type: run
    ask_credential: yes
    ask_inventory: yes
    state: present
  register: result

- name: Launch job template with inventory and credential for prompt on launch
  tower_job_launch:
    job_template: "Demo Job Template - ask inventory and credential"
    inventory: "Demo Inventory"
    credential: "Demo Credential"
  register: result

- assert:
    that:
      - "result is changed"
      - "result.status == 'pending'"

- name: Create a project for testing extra_vars
  tower_project:
    name: test-playbooks
    organization: Default
    scm_type: git
    scm_url: https://github.com/ansible/test-playbooks

- name: Create a Job Template for testing extra_vars
  tower_job_template:
    name: "Demo Job Template - extra_vars"
    project: test-playbooks
    playbook: debug.yml
    job_type: run
    state: present
    inventory: "Demo Inventory"
    extra_vars: "{{ lookup('file', '{{ playbook_dir }}/tower_job_launch/files/vars.yml') | from_yaml }}"
  register: result

- name: Launch job template with inventory and credential for prompt on launch
  tower_job_launch:
    job_template: "Demo Job Template - extra_vars"
  register: result

- assert:
    that:
      - "result is changed"
      - "result.status == 'pending' or result.status == 'waiting'"

- name: Get the job
  tower_job_list:
    query: {"id": "{{result.id}}" }
  register: result

- assert:
    that:
      - '{"msg": "foo"} | to_json in result.results[0].extra_vars'
